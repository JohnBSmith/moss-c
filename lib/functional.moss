
fix = sub|F|
  m={}
  return sub g|n|
    if n not in m then m[n]=F(g,n) end
    return m[n]
  end
end

first = |f,*a| |*b| f[a+b]
last  = |f,*a| |*b| f[b+a]
fun = |a| |n| a[n]

curry = sub|f,n|
  a=list(0..n-1)
  g = sub|x| a[n-1]=x; f[a] end
  for i in 2..n
    g = sub|x| a[n-i]=x; g end
  end
  return g
end

uncurry = sub|f|
  |*a| a.reduce(f,|g,x| g(x))
end


