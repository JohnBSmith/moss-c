
fix = sub|F|
  m={}
  return sub g|n|
    if n not in m then m[n]=F(g,n) end
    return m[n]
  end
end

first = sub|f,*a|
  sub|*b| f.apply(null,a+b) end
end

last = sub|f,*a|
  sub|*b| f.apply(null,b+a) end
end

curry = sub|f,n|
  a=list(0..n-1)
  g = sub|x| a[n-1]=x; f.apply(null,a) end
  for i in 2..n
    g = sub|x| a[n-i]=x; g end
  end
  return g
end

uncurry = sub|f|
  sub|*a| a.reduce(f,sub|g,x| g(x) end) end
end

fun = sub|a|
  sub|n| a[n] end
end


